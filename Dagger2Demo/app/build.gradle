apply plugin: 'com.android.application'
apply plugin: 'walle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.llweiya.ysx.dagger2demo"
        minSdkVersion 20
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        ndk {
            abiFilters 'armeabi-v7a'   //abiFilter 'armeabi, x86'
        }
        splits {
            abi {
                enable false
                reset()
                include 'armeabi-v7a'
            }
        }
    }

    signingConfigs {
        llweiya {
            storeFile file("libs/llweiya.jks")
            storePassword "123456"
            keyAlias "llweiya"
            keyPassword "123456"
            v2SigningEnabled true//是否启用APK Signature Scheme v2
        }
    }

    signingConfigs {
        releaseConfig {
            v2SigningEnabled true
        }
        debugConfig {
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            matchingFallbacks = ['release']
            signingConfig signingConfigs.llweiya
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.llweiya
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':annotation')
    annotationProcessor project(':apt')

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    //dagger2
    api 'com.google.dagger:dagger:2.9'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    //retrofit2
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.squareup.okhttp3:okhttp:3.8.1'
    api 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    //RxJava
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api 'io.reactivex.rxjava2:rxjava:2.1.7'
    api 'com.hwangjr.rxbus:rxbus:1.0.6'
//    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    //字体
    api 'org.aspectj:aspectjrt:1.8.9'
    //aop,面向切面编程
    //百度推送
    api files('src/main/jniLibs/pushservice-6.1.1.21.jar')
    //gson
    api 'com.google.code.gson:gson:2.8.5'
    api 'androidx.annotation:annotation:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.2'

    implementation "cn.bingoogolapple:bga-badgeview-api:1.1.8"
    annotationProcessor "cn.bingoogolapple:bga-badgeview-compiler:1.1.8"

    api 'cn.bingoogolapple:bga-swipebacklayout:1.1.9@aar'

    api 'q.rorbin:badgeview:1.1.3'
    api 'com.bartoszlipinski:viewpropertyobjectanimator:1.4.5'

    //从顶部弹出的snackbar
    api 'com.androidadvance:topsnackbar:1.1.1'

    api 'com.youzanyun.open.mobile:basic:6.3.3'

//    //功能库（Zxing扫描与生成二维码条形码 支付宝 微信）
//    implementation "com.github.vondear.RxTool:RxFeature:v2.0.4"

    api 'com.github.XuDaojie:QRCode-Android:v0.4.2'

    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'

    api 'com.kailashdabhi:om-recorder:1.1.5'

    api('com.alibaba.android:ultraviewpager:1.0.7.7@aar') {
        transitive = true
    }

    api 'com.rmtheis:tess-two:6.0.0'

    implementation 'com.google.android:flexbox:1.0.0'

    api 'com.dld.seg:SegControlView:1.0.0'

    api 'androidx.multidex:multidex:2.0.0'

    api 'com.roughike:bottom-bar:2.3.1'

    api 'com.githang:status-bar-compat:0.5.2'

    api 'com.rengwuxian.materialedittext:library:2.1.4'

    api 'de.hdodenhof:circleimageview:3.0.0'

    api 'com.github.hackware1993:MagicIndicator:1.6.0'

    api 'com.meituan.android.walle:library:1.1.6'

    api 'com.lzy.widget:ninegridview:0.2.0'

    api 'com.github.pinguo-zhouwei:MZBannerView:v2.0.2'

    api 'com.lzy.widget:ninegridview:0.2.0'

    api 'androidx.recyclerview:recyclerview:1.1.0'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = "llweiya" + "_" + '${channel}' + "_" + "release_v" + '${versionCode}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel.txt")
}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }
    log.error "========================";
    log.error "Aspectj切片开始编织Class!";
    log.error "========================";

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
